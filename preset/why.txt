Почему происходит настройка временной зоны и локали:

	С датой, думаю, понятно - она изначально на три часа меньше московского времени, что создаст неудобства при использовании системы. Кроме этого, бывает багуля, когда после установки правильной временной зоны время отсаёт на несколько минут из-за отсутствия утилиты синхронизации.
	По поводу локали. Оказалось, что Ubuntu 18.04 на сегодняшний день (15.09.2018) прилетает с некой "универсальной" кодировкой для английского языка "C.UTF-8" (если я правильно понял, она является единой для американского и британского английского или типа того). Её можно увидеть, если выполнить команду "locale" при первом запуске машины. Отсутсвие русской локали может выдать кракозябры в некоторых случаях. А ещё она нужна для баз данных PostgreSQL (а, возможно, и остальных).
	Установка русской локали, как системной возможна только с перезагрузкой терминала, то есть выйти из машины и войти снова.

--------------------------

Почему PostgreSQL устанавливается в самом конце, через команду в Makefile:

	 Выше описана ситуация с "универсальной" английской локалью, установленной в систему по умолчанию. Постгрес при установке цепляет системную локаль и создаёт на её основе свои первичные БД. Это поведение помешает пользователю создать БД с установленными collate и ctype для русского языка потому что при создании новой БД постгрес использует базу "template1" за основу, если иные условия не оговорены, а она будет на кодировке "C.UTF-8". Решить этот конфликт можно несколькими путями:
	  1. При создании каждой БД указывать явно какие кодировки нам нужны и использовать "template0", что немного дублирование;
	  2. Возможно, получится изменить кодировку шаблонов, но это не интересно, т.к. есть пункт 3.
	  3. Сначала установить требуемую локаль, а уже потом накатить постгрес.
	Нам ведь, по сути, без разницы, в какой момент он будет установлен + необходимо установить пароль для девелопера + необходимо открыть внешние соединения. Поэтому постгрес отпочковался из основного шелл-скрипта в мейкфайл. Зато теперь можно спокойно создавать БД без оглядки на локали и используемые шаблоны.
	
Бонус: команды 'echo "something" >> /etc/somecatalog/somefile' и 'echo "something" | sudo tee -a /somecatalog/somefile' равнозначны, однако, первая не выполнится, т.к. файл защищён от записи. У команды "tee", ключ "-а" дописывает в файл, его отсутсвие - перезапись файла.
